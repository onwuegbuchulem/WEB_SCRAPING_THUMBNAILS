Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Ideally, the programming language best suited for the task at hand will be selected.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process â€“ whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
However, readability is more than just programming style.
Many applications use a mix of several languages in their construction and use.
 Code-breaking algorithms have also existed for centuries.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
Relatedly, software engineering combines engineering techniques and principles with software development.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Ideally, the programming language best suited for the task at hand will be selected.