This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process â€“ whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
Many applications use a mix of several languages in their construction and use.
Use of a static code analysis tool can help detect some possible problems.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Many applications use a mix of several languages in their construction and use.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Compiling takes the source code from a low-level programming language and converts it into machine code.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Code-breaking algorithms have also existed for centuries.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.