Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
To produce machine code, the source code must either be compiled or transpiled.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
This is interpreted into machine code.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 It is very difficult to determine what are the most popular modern programming languages.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.