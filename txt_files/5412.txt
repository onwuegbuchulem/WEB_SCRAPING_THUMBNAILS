Many applications use a mix of several languages in their construction and use.
Techniques like Code refactoring can enhance readability.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
However, readability is more than just programming style.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Techniques like Code refactoring can enhance readability.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Compiling takes the source code from a low-level programming language and converts it into machine code.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.