The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Use of a static code analysis tool can help detect some possible problems.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Many applications use a mix of several languages in their construction and use.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Many applications use a mix of several languages in their construction and use.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.