Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Ideally, the programming language best suited for the task at hand will be selected.
Programming languages are essential for software development.
Relatedly, software engineering combines engineering techniques and principles with software development.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
One approach popular for requirements analysis is Use Case analysis.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 Computer programmers are those who write computer software.
 Tasks accompanying and related to programming include testing, debugging, source code maintenance, implementation of build systems, and management of derived artifacts, such as the machine code of computer programs.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.