For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process â€“ whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
Compiling takes the source code from a low-level programming language and converts it into machine code.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
Scripting and breakpointing is also part of this process.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
To produce machine code, the source code must either be compiled or transpiled.
 Computer programmers are those who write computer software.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.