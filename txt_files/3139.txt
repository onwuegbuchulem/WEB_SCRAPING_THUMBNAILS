For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process – whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
It is usually easier to code in "high-level" languages than in "low-level" ones.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process – whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
To produce machine code, the source code must either be compiled or transpiled.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.