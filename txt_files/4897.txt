Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Many applications use a mix of several languages in their construction and use.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process â€“ whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
Normally the first step in debugging is to attempt to reproduce the problem.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Programs were mostly entered using punched cards or paper tape.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
It is usually easier to code in "high-level" languages than in "low-level" ones.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Integrated development environments (IDEs) aim to integrate all such help.