For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
To produce machine code, the source code must either be compiled or transpiled.
Normally the first step in debugging is to attempt to reproduce the problem.
Relatedly, software engineering combines engineering techniques and principles with software development.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Scripting and breakpointing is also part of this process.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Integrated development environments (IDEs) aim to integrate all such help.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
Use of a static code analysis tool can help detect some possible problems.