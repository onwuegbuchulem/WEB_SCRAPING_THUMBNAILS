The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Ideally, the programming language best suited for the task at hand will be selected.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
One approach popular for requirements analysis is Use Case analysis.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
One approach popular for requirements analysis is Use Case analysis.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.