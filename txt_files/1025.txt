Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
To produce machine code, the source code must either be compiled or transpiled.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
Normally the first step in debugging is to attempt to reproduce the problem.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Different programming languages support different styles of programming (called programming paradigms).
 Following a consistent programming style often helps readability.
 Tasks accompanying and related to programming include testing, debugging, source code maintenance, implementation of build systems, and management of derived artifacts, such as the machine code of computer programs.
 Different programming languages support different styles of programming (called programming paradigms).