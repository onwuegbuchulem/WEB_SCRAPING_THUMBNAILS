It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Techniques like Code refactoring can enhance readability.
Relatedly, software engineering combines engineering techniques and principles with software development.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Many applications use a mix of several languages in their construction and use.
It is usually easier to code in "high-level" languages than in "low-level" ones.
Many applications use a mix of several languages in their construction and use.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Normally the first step in debugging is to attempt to reproduce the problem.