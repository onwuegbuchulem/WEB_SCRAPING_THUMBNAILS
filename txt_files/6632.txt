Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Normally the first step in debugging is to attempt to reproduce the problem.
There exist a lot of different approaches for each of those tasks.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
It is usually easier to code in "high-level" languages than in "low-level" ones.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.

 Computer programming is the process of performing particular computations (or more generally, accomplishing specific computing results), usually by designing and building executable computer programs.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Computer programmers are those who write computer software.
 Following a consistent programming style often helps readability.