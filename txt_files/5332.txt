Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
There exist a lot of different approaches for each of those tasks.
It is usually easier to code in "high-level" languages than in "low-level" ones.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 Following a consistent programming style often helps readability.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Use of a static code analysis tool can help detect some possible problems.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
Many applications use a mix of several languages in their construction and use.
Also, specific user environment and usage history can make it difficult to reproduce the problem.