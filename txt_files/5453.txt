Ideally, the programming language best suited for the task at hand will be selected.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Use of a static code analysis tool can help detect some possible problems.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
One approach popular for requirements analysis is Use Case analysis.
 It is very difficult to determine what are the most popular modern programming languages.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
There are many approaches to the Software development process.