This is interpreted into machine code.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Use of a static code analysis tool can help detect some possible problems.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Relatedly, software engineering combines engineering techniques and principles with software development.
To produce machine code, the source code must either be compiled or transpiled.
Scripting and breakpointing is also part of this process.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).