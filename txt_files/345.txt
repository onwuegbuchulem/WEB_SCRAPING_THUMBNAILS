Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
There are many approaches to the Software development process.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
Many applications use a mix of several languages in their construction and use.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
There exist a lot of different approaches for each of those tasks.
Integrated development environments (IDEs) aim to integrate all such help.
There exist a lot of different approaches for each of those tasks.
Use of a static code analysis tool can help detect some possible problems.
 It is very difficult to determine what are the most popular modern programming languages.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
This is interpreted into machine code.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.