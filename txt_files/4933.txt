However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Relatedly, software engineering combines engineering techniques and principles with software development.
However, readability is more than just programming style.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process â€“ whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.
Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
Techniques like Code refactoring can enhance readability.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Techniques like Code refactoring can enhance readability.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Programming involves tasks such as analysis, generating algorithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms (usually in a particular programming language, commonly referred to as coding).
Many applications use a mix of several languages in their construction and use.
There exist a lot of different approaches for each of those tasks.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.