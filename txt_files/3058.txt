Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
It is usually easier to code in "high-level" languages than in "low-level" ones.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Ideally, the programming language best suited for the task at hand will be selected.
There exist a lot of different approaches for each of those tasks.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Normally the first step in debugging is to attempt to reproduce the problem.

 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
 Programmable devices have existed for centuries.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.