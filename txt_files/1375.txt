There exist a lot of different approaches for each of those tasks.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Relatedly, software engineering combines engineering techniques and principles with software development.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Techniques like Code refactoring can enhance readability.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.

 Different programming languages support different styles of programming (called programming paradigms).
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.

 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).