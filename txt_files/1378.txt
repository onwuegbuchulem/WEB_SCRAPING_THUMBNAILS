Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Normally the first step in debugging is to attempt to reproduce the problem.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
It is usually easier to code in "high-level" languages than in "low-level" ones.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Normally the first step in debugging is to attempt to reproduce the problem.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Techniques like Code refactoring can enhance readability.
 Programs were mostly entered using punched cards or paper tape.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
However, while these might be considered part of the programming process, often the term software development is more likely used for this larger overall process – whereas the terms programming, implementation, and coding tend to be focused on the actual writing of code.