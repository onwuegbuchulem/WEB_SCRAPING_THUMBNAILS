Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
Normally the first step in debugging is to attempt to reproduce the problem.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Integrated development environments (IDEs) aim to integrate all such help.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
One approach popular for requirements analysis is Use Case analysis.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
Normally the first step in debugging is to attempt to reproduce the problem.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
 It is very difficult to determine what are the most popular modern programming languages.