Techniques like Code refactoring can enhance readability.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
However, readability is more than just programming style.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Use of a static code analysis tool can help detect some possible problems.
Normally the first step in debugging is to attempt to reproduce the problem.
Transpiling on the other hand, takes the source-code from a high-level programming language and converts it into bytecode.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).