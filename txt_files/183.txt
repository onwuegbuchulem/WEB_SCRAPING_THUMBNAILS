In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Techniques like Code refactoring can enhance readability.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
To produce machine code, the source code must either be compiled or transpiled.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
There exist a lot of different approaches for each of those tasks.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
This is interpreted into machine code.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Normally the first step in debugging is to attempt to reproduce the problem.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.