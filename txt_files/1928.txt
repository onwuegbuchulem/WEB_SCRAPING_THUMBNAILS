FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
There are many approaches to the Software development process.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
 Programs were mostly entered using punched cards or paper tape.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
This is interpreted into machine code.