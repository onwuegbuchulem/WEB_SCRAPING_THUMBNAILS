Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
Normally the first step in debugging is to attempt to reproduce the problem.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
It is usually easier to code in "high-level" languages than in "low-level" ones.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
There exist a lot of different approaches for each of those tasks.
Ideally, the programming language best suited for the task at hand will be selected.
Normally the first step in debugging is to attempt to reproduce the problem.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Techniques like Code refactoring can enhance readability.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.