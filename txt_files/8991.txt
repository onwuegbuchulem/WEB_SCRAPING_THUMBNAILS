In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
There exist a lot of different approaches for each of those tasks.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
However, readability is more than just programming style.
 Programmable devices have existed for centuries.
Compiling takes the source code from a low-level programming language and converts it into machine code.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
 Code-breaking algorithms have also existed for centuries.