It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Transpiling on the other hand, takes the source-code from a high-level programming language and converts it into bytecode.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Relatedly, software engineering combines engineering techniques and principles with software development.
It is usually easier to code in "high-level" languages than in "low-level" ones.