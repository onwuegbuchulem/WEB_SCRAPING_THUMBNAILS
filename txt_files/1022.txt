To produce machine code, the source code must either be compiled or transpiled.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Normally the first step in debugging is to attempt to reproduce the problem.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Relatedly, software engineering combines engineering techniques and principles with software development.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
Techniques like Code refactoring can enhance readability.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.