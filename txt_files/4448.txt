Compiling takes the source code from a low-level programming language and converts it into machine code.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Ideally, the programming language best suited for the task at hand will be selected.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Use of a static code analysis tool can help detect some possible problems.
Techniques like Code refactoring can enhance readability.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
One approach popular for requirements analysis is Use Case analysis.
Many applications use a mix of several languages in their construction and use.
 Computer programmers are those who write computer software.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
One approach popular for requirements analysis is Use Case analysis.