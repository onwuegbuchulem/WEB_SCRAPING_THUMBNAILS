Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Scripting and breakpointing is also part of this process.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Programming involves tasks such as analysis, generating algorithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms (usually in a particular programming language, commonly referred to as coding).
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Relatedly, software engineering combines engineering techniques and principles with software development.
However, readability is more than just programming style.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Compiling takes the source code from a low-level programming language and converts it into machine code.
Ideally, the programming language best suited for the task at hand will be selected.