This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Ideally, the programming language best suited for the task at hand will be selected.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Different programming languages support different styles of programming (called programming paradigms).