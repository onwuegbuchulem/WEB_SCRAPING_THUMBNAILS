Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Programming languages are essential for software development.
Ideally, the programming language best suited for the task at hand will be selected.
Techniques like Code refactoring can enhance readability.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit.
However, readability is more than just programming style.
This is interpreted into machine code.
There are many approaches to the Software development process.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
However, readability is more than just programming style.

It affects the aspects of quality above, including portability, usability and most importantly maintainability.
There exist a lot of different approaches for each of those tasks.