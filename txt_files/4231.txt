There are many approaches to the Software development process.
Techniques like Code refactoring can enhance readability.
Integrated development environments (IDEs) aim to integrate all such help.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Compiling takes the source code from a low-level programming language and converts it into machine code.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
Ideally, the programming language best suited for the task at hand will be selected.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Relatedly, software engineering combines engineering techniques and principles with software development.
Also, those involved with software development may at times engage in reverse engineering, which is the practice of seeking to understand an existing program so as to re-implement its function in some way.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.