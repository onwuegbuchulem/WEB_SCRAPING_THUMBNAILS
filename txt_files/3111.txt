Unreadable code often leads to bugs, inefficiencies, and duplicated code.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
Compiling takes the source code from a low-level programming language and converts it into machine code.
Programming languages are essential for software development.
To produce machine code, the source code must either be compiled or transpiled.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.
The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem.
 Code-breaking algorithms have also existed for centuries.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
 Code-breaking algorithms have also existed for centuries.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.