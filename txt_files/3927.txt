Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Programming languages are essential for software development.
However, readability is more than just programming style.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
Use of a static code analysis tool can help detect some possible problems.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
Techniques like Code refactoring can enhance readability.
Compiling takes the source code from a low-level programming language and converts it into machine code.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.