It is usually easier to code in "high-level" languages than in "low-level" ones.
Ideally, the programming language best suited for the task at hand will be selected.
Techniques like Code refactoring can enhance readability.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Relatedly, software engineering combines engineering techniques and principles with software development.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
There exist a lot of different approaches for each of those tasks.
Normally the first step in debugging is to attempt to reproduce the problem.
Many applications use a mix of several languages in their construction and use.
 Different programming languages support different styles of programming (called programming paradigms).
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
It is usually easier to code in "high-level" languages than in "low-level" ones.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.