Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
There are many approaches to the Software development process.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Techniques like Code refactoring can enhance readability.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Use of a static code analysis tool can help detect some possible problems.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Compiling takes the source code from a low-level programming language and converts it into machine code.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Integrated development environments (IDEs) aim to integrate all such help.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
Relatedly, software engineering combines engineering techniques and principles with software development.