Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Techniques like Code refactoring can enhance readability.
 Code-breaking algorithms have also existed for centuries.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Programmable devices have existed for centuries.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
However, readability is more than just programming style.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.

It is usually easier to code in "high-level" languages than in "low-level" ones.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.