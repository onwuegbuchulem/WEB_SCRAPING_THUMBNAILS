Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
However, readability is more than just programming style.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
 Different programming languages support different styles of programming (called programming paradigms).
It affects the aspects of quality above, including portability, usability and most importantly maintainability.

 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Programming languages are essential for software development.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Use of a static code analysis tool can help detect some possible problems.
Many applications use a mix of several languages in their construction and use.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.