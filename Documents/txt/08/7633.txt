Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
However, readability is more than just programming style.
 Following a consistent programming style often helps readability.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Many applications use a mix of several languages in their construction and use.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.