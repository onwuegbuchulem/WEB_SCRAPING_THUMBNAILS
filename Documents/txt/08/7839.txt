 Different programming languages support different styles of programming (called programming paradigms).
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 Programs were mostly entered using punched cards or paper tape.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
One approach popular for requirements analysis is Use Case analysis.
While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
It is usually easier to code in "high-level" languages than in "low-level" ones.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.