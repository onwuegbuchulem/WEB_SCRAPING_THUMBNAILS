 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
 Computer programmers are those who write computer software.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
One approach popular for requirements analysis is Use Case analysis.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Following a consistent programming style often helps readability.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.