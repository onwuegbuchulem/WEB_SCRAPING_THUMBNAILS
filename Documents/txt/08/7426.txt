 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
 Programs were mostly entered using punched cards or paper tape.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
Techniques like Code refactoring can enhance readability.
Scripting and breakpointing is also part of this process.
 Different programming languages support different styles of programming (called programming paradigms).
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Use of a static code analysis tool can help detect some possible problems.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
There are many approaches to the Software development process.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.