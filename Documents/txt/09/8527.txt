While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
One approach popular for requirements analysis is Use Case analysis.
There exist a lot of different approaches for each of those tasks.
Use of a static code analysis tool can help detect some possible problems.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 Code-breaking algorithms have also existed for centuries.