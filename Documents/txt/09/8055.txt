Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
However, readability is more than just programming style.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 Programmable devices have existed for centuries.
Many applications use a mix of several languages in their construction and use.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Ideally, the programming language best suited for the task at hand will be selected.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Use of a static code analysis tool can help detect some possible problems.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.