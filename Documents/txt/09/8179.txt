There are many approaches to the Software development process.
 Different programming languages support different styles of programming (called programming paradigms).
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
 Following a consistent programming style often helps readability.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Normally the first step in debugging is to attempt to reproduce the problem.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Programs were mostly entered using punched cards or paper tape.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.