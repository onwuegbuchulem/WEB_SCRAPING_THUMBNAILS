Ideally, the programming language best suited for the task at hand will be selected.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Many applications use a mix of several languages in their construction and use.
 Following a consistent programming style often helps readability.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Use of a static code analysis tool can help detect some possible problems.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
There exist a lot of different approaches for each of those tasks.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.