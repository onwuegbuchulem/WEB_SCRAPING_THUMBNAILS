 Programs were mostly entered using punched cards or paper tape.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
It is usually easier to code in "high-level" languages than in "low-level" ones.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.

 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
There exist a lot of different approaches for each of those tasks.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
One approach popular for requirements analysis is Use Case analysis.