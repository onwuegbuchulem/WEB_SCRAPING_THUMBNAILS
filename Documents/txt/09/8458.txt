Ideally, the programming language best suited for the task at hand will be selected.
 Following a consistent programming style often helps readability.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
There are many approaches to the Software development process.