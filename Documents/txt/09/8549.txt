 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
 Following a consistent programming style often helps readability.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
 Programs were mostly entered using punched cards or paper tape.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
Ideally, the programming language best suited for the task at hand will be selected.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.