It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Different programming languages support different styles of programming (called programming paradigms).
Techniques like Code refactoring can enhance readability.

As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.