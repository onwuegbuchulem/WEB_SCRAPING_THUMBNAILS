 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Use of a static code analysis tool can help detect some possible problems.
Ideally, the programming language best suited for the task at hand will be selected.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Many applications use a mix of several languages in their construction and use.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
There exist a lot of different approaches for each of those tasks.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Programs were mostly entered using punched cards or paper tape.