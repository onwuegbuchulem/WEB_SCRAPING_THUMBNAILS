
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 Following a consistent programming style often helps readability.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 It is very difficult to determine what are the most popular modern programming languages.
While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
Programming languages are essential for software development.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.