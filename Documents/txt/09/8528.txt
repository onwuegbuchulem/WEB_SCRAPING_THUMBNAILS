 Different programming languages support different styles of programming (called programming paradigms).
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Many applications use a mix of several languages in their construction and use.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
 Computer programmers are those who write computer software.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Programming languages are essential for software development.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.