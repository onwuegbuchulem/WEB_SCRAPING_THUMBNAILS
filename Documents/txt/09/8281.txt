It affects the aspects of quality above, including portability, usability and most importantly maintainability.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
 Code-breaking algorithms have also existed for centuries.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Techniques like Code refactoring can enhance readability.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Following a consistent programming style often helps readability.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.