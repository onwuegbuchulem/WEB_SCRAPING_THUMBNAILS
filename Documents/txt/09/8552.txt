Ideally, the programming language best suited for the task at hand will be selected.
There are many approaches to the Software development process.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
Many applications use a mix of several languages in their construction and use.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Programs were mostly entered using punched cards or paper tape.
Scripting and breakpointing is also part of this process.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
There exist a lot of different approaches for each of those tasks.