However, readability is more than just programming style.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
One approach popular for requirements analysis is Use Case analysis.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
It is usually easier to code in "high-level" languages than in "low-level" ones.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Programmable devices have existed for centuries.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.