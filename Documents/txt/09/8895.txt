Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Programmable devices have existed for centuries.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Integrated development environments (IDEs) aim to integrate all such help.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Ideally, the programming language best suited for the task at hand will be selected.