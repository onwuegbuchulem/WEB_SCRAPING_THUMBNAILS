 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 It is very difficult to determine what are the most popular modern programming languages.
There are many approaches to the Software development process.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Also, specific user environment and usage history can make it difficult to reproduce the problem.

Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.