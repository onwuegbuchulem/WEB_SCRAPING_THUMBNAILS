Many applications use a mix of several languages in their construction and use.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
There are many approaches to the Software development process.
 Programs were mostly entered using punched cards or paper tape.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Ideally, the programming language best suited for the task at hand will be selected.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
One approach popular for requirements analysis is Use Case analysis.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).