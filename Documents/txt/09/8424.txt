Integrated development environments (IDEs) aim to integrate all such help.
Use of a static code analysis tool can help detect some possible problems.
However, readability is more than just programming style.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
 It is very difficult to determine what are the most popular modern programming languages.
Ideally, the programming language best suited for the task at hand will be selected.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Normally the first step in debugging is to attempt to reproduce the problem.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 Following a consistent programming style often helps readability.