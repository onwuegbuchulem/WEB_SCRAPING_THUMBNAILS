 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Use of a static code analysis tool can help detect some possible problems.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Also, specific user environment and usage history can make it difficult to reproduce the problem.