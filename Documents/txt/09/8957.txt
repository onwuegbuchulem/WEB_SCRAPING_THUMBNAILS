Scripting and breakpointing is also part of this process.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
There exist a lot of different approaches for each of those tasks.
Programming languages are essential for software development.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
Techniques like Code refactoring can enhance readability.
Normally the first step in debugging is to attempt to reproduce the problem.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.