 Programs were mostly entered using punched cards or paper tape.
Many applications use a mix of several languages in their construction and use.
 Different programming languages support different styles of programming (called programming paradigms).
Techniques like Code refactoring can enhance readability.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.