 Different programming languages support different styles of programming (called programming paradigms).
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
There exist a lot of different approaches for each of those tasks.
 Code-breaking algorithms have also existed for centuries.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
However, readability is more than just programming style.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.