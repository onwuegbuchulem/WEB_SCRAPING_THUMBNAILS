The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Normally the first step in debugging is to attempt to reproduce the problem.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Scripting and breakpointing is also part of this process.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
Many applications use a mix of several languages in their construction and use.
Integrated development environments (IDEs) aim to integrate all such help.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.