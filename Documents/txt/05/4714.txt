Techniques like Code refactoring can enhance readability.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Integrated development environments (IDEs) aim to integrate all such help.
Ideally, the programming language best suited for the task at hand will be selected.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
 Programs were mostly entered using punched cards or paper tape.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
 Different programming languages support different styles of programming (called programming paradigms).
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.