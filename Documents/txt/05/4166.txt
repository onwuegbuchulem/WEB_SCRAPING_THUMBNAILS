As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 Different programming languages support different styles of programming (called programming paradigms).
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.

One approach popular for requirements analysis is Use Case analysis.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Programming languages are essential for software development.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Programmable devices have existed for centuries.
However, readability is more than just programming style.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
 Computer programmers are those who write computer software.