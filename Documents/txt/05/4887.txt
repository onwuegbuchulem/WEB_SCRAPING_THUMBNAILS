Ideally, the programming language best suited for the task at hand will be selected.
Many applications use a mix of several languages in their construction and use.
Scripting and breakpointing is also part of this process.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
One approach popular for requirements analysis is Use Case analysis.
It is usually easier to code in "high-level" languages than in "low-level" ones.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Use of a static code analysis tool can help detect some possible problems.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.