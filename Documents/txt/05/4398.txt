Normally the first step in debugging is to attempt to reproduce the problem.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 It is very difficult to determine what are the most popular modern programming languages.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
Scripting and breakpointing is also part of this process.
One approach popular for requirements analysis is Use Case analysis.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.