 Computer programmers are those who write computer software.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
One approach popular for requirements analysis is Use Case analysis.

By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 Different programming languages support different styles of programming (called programming paradigms).
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
 It is very difficult to determine what are the most popular modern programming languages.