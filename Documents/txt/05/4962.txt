As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Programmable devices have existed for centuries.
Methods of measuring programming language popularity include: counting the number of job advertisements that mention the language, the number of books sold and courses teaching the language (this overestimates the importance of newer languages), and estimates of the number of existing lines of code written in the language (this underestimates the number of users of business languages such as COBOL).
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Normally the first step in debugging is to attempt to reproduce the problem.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.