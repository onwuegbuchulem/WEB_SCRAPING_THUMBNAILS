 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Techniques like Code refactoring can enhance readability.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
 Following a consistent programming style often helps readability.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 Programs were mostly entered using punched cards or paper tape.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.

Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
Scripting and breakpointing is also part of this process.
Integrated development environments (IDEs) aim to integrate all such help.