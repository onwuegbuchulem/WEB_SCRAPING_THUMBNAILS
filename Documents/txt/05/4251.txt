
The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 It is very difficult to determine what are the most popular modern programming languages.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Many applications use a mix of several languages in their construction and use.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.