In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
Use of a static code analysis tool can help detect some possible problems.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Ideally, the programming language best suited for the task at hand will be selected.
 Different programming languages support different styles of programming (called programming paradigms).
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.

There exist a lot of different approaches for each of those tasks.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.