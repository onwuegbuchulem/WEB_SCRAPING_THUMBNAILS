It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
One approach popular for requirements analysis is Use Case analysis.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
 It is very difficult to determine what are the most popular modern programming languages.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Integrated development environments (IDEs) aim to integrate all such help.