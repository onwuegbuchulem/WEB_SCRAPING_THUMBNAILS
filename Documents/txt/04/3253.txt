Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Scripting and breakpointing is also part of this process.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
There are many approaches to the Software development process.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Code-breaking algorithms have also existed for centuries.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Integrated development environments (IDEs) aim to integrate all such help.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
 Different programming languages support different styles of programming (called programming paradigms).
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.