 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Programmable devices have existed for centuries.
 Different programming languages support different styles of programming (called programming paradigms).
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
There are many approaches to the Software development process.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 Programs were mostly entered using punched cards or paper tape.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.