A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.

However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
There are many approaches to the Software development process.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.