Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Programs were mostly entered using punched cards or paper tape.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
One approach popular for requirements analysis is Use Case analysis.

Techniques like Code refactoring can enhance readability.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.