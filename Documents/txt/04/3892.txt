 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Integrated development environments (IDEs) aim to integrate all such help.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 Following a consistent programming style often helps readability.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
However, readability is more than just programming style.

He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.