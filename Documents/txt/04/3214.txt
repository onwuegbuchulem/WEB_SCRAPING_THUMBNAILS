 Programmable devices have existed for centuries.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Integrated development environments (IDEs) aim to integrate all such help.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
 Following a consistent programming style often helps readability.
 Computer programmers are those who write computer software.
 Programs were mostly entered using punched cards or paper tape.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
One approach popular for requirements analysis is Use Case analysis.