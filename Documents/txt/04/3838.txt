Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.

 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Scripting and breakpointing is also part of this process.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.