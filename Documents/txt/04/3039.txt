 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Programs were mostly entered using punched cards or paper tape.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 It is very difficult to determine what are the most popular modern programming languages.
Many applications use a mix of several languages in their construction and use.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.

This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.