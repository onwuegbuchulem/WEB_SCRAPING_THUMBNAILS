 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Normally the first step in debugging is to attempt to reproduce the problem.

Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
 Programs were mostly entered using punched cards or paper tape.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Scripting and breakpointing is also part of this process.