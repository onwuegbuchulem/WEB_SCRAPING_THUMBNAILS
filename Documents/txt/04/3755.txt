Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
 Programmable devices have existed for centuries.
While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
Techniques like Code refactoring can enhance readability.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
There are many approaches to the Software development process.
Use of a static code analysis tool can help detect some possible problems.