In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Different programming languages support different styles of programming (called programming paradigms).
Programming languages are essential for software development.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
 Following a consistent programming style often helps readability.
Techniques like Code refactoring can enhance readability.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Scripting and breakpointing is also part of this process.
 Computer programmers are those who write computer software.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.