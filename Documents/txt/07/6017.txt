Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
It is usually easier to code in "high-level" languages than in "low-level" ones.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Normally the first step in debugging is to attempt to reproduce the problem.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Ideally, the programming language best suited for the task at hand will be selected.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 It is very difficult to determine what are the most popular modern programming languages.