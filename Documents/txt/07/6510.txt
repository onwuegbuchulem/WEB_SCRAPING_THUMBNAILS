FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
 Different programming languages support different styles of programming (called programming paradigms).
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Computer programmers are those who write computer software.