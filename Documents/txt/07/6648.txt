Ideally, the programming language best suited for the task at hand will be selected.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
 Programs were mostly entered using punched cards or paper tape.
There exist a lot of different approaches for each of those tasks.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Many applications use a mix of several languages in their construction and use.
 Different programming languages support different styles of programming (called programming paradigms).
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 Programmable devices have existed for centuries.