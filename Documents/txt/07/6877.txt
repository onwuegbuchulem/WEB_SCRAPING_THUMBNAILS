There are many approaches to the Software development process.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 Programmable devices have existed for centuries.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
 It is very difficult to determine what are the most popular modern programming languages.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
Use of a static code analysis tool can help detect some possible problems.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.

Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.