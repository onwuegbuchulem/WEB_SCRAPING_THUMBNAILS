Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Many applications use a mix of several languages in their construction and use.
 Different programming languages support different styles of programming (called programming paradigms).
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Techniques like Code refactoring can enhance readability.
 Following a consistent programming style often helps readability.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
 Computer programmers are those who write computer software.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Scripting and breakpointing is also part of this process.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
There exist a lot of different approaches for each of those tasks.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.