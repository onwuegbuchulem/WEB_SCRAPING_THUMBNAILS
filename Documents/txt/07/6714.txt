It is usually easier to code in "high-level" languages than in "low-level" ones.
 Programs were mostly entered using punched cards or paper tape.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 Different programming languages support different styles of programming (called programming paradigms).
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
There exist a lot of different approaches for each of those tasks.
 Programmable devices have existed for centuries.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
However, readability is more than just programming style.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Normally the first step in debugging is to attempt to reproduce the problem.