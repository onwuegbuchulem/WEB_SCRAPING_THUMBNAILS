 Following a consistent programming style often helps readability.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
There are many approaches to the Software development process.
Integrated development environments (IDEs) aim to integrate all such help.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
One approach popular for requirements analysis is Use Case analysis.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.