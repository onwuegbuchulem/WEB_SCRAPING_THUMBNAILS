Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 Programs were mostly entered using punched cards or paper tape.
Programming languages are essential for software development.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
It is usually easier to code in "high-level" languages than in "low-level" ones.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Normally the first step in debugging is to attempt to reproduce the problem.

Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Scripting and breakpointing is also part of this process.
 Different programming languages support different styles of programming (called programming paradigms).