While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 Programs were mostly entered using punched cards or paper tape.
Programming languages are essential for software development.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Techniques like Code refactoring can enhance readability.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
 Code-breaking algorithms have also existed for centuries.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
 Computer programmers are those who write computer software.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.