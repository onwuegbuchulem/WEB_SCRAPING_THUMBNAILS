 Computer programmers are those who write computer software.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.

When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
Many applications use a mix of several languages in their construction and use.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 Programmable devices have existed for centuries.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 Programs were mostly entered using punched cards or paper tape.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.