In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
Ideally, the programming language best suited for the task at hand will be selected.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Different programming languages support different styles of programming (called programming paradigms).
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.