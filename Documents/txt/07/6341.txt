Many applications use a mix of several languages in their construction and use.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
Techniques like Code refactoring can enhance readability.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.