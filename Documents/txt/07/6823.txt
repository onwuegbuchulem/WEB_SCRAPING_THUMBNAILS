In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
There exist a lot of different approaches for each of those tasks.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 Different programming languages support different styles of programming (called programming paradigms).
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
Integrated development environments (IDEs) aim to integrate all such help.
Many applications use a mix of several languages in their construction and use.
One approach popular for requirements analysis is Use Case analysis.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Also, specific user environment and usage history can make it difficult to reproduce the problem.