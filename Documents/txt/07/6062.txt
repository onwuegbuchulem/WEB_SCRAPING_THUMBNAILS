 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Techniques like Code refactoring can enhance readability.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Code-breaking algorithms have also existed for centuries.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Normally the first step in debugging is to attempt to reproduce the problem.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.