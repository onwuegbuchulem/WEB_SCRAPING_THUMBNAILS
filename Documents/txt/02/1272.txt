Techniques like Code refactoring can enhance readability.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Programs were mostly entered using punched cards or paper tape.
Normally the first step in debugging is to attempt to reproduce the problem.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.