 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
However, readability is more than just programming style.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
Methods of measuring programming language popularity include: counting the number of job advertisements that mention the language, the number of books sold and courses teaching the language (this overestimates the importance of newer languages), and estimates of the number of existing lines of code written in the language (this underestimates the number of users of business languages such as COBOL).
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
Ideally, the programming language best suited for the task at hand will be selected.
It is usually easier to code in "high-level" languages than in "low-level" ones.
One approach popular for requirements analysis is Use Case analysis.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.