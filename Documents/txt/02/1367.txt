By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
 Programmable devices have existed for centuries.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
 Programs were mostly entered using punched cards or paper tape.
 Different programming languages support different styles of programming (called programming paradigms).
Techniques like Code refactoring can enhance readability.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
However, readability is more than just programming style.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.