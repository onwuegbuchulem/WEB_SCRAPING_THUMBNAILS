Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Programming languages are essential for software development.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Normally the first step in debugging is to attempt to reproduce the problem.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
Also, specific user environment and usage history can make it difficult to reproduce the problem.
When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.