Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
 Different programming languages support different styles of programming (called programming paradigms).
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Following a consistent programming style often helps readability.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
However, readability is more than just programming style.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Techniques like Code refactoring can enhance readability.