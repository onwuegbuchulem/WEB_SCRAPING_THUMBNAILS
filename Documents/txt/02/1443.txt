It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.

However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
 Following a consistent programming style often helps readability.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Techniques like Code refactoring can enhance readability.
Many applications use a mix of several languages in their construction and use.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).