 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
 It is very difficult to determine what are the most popular modern programming languages.
Ideally, the programming language best suited for the task at hand will be selected.
 Different programming languages support different styles of programming (called programming paradigms).
However, readability is more than just programming style.
Methods of measuring programming language popularity include: counting the number of job advertisements that mention the language, the number of books sold and courses teaching the language (this overestimates the importance of newer languages), and estimates of the number of existing lines of code written in the language (this underestimates the number of users of business languages such as COBOL).
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
There exist a lot of different approaches for each of those tasks.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
One approach popular for requirements analysis is Use Case analysis.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Normally the first step in debugging is to attempt to reproduce the problem.