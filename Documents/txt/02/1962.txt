The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
There exist a lot of different approaches for each of those tasks.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 Programmable devices have existed for centuries.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Techniques like Code refactoring can enhance readability.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.