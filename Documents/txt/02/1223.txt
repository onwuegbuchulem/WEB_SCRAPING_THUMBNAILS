 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Code-breaking algorithms have also existed for centuries.
Techniques like Code refactoring can enhance readability.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Ideally, the programming language best suited for the task at hand will be selected.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
 Following a consistent programming style often helps readability.