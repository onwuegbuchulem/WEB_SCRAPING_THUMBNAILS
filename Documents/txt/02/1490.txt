 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Scripting and breakpointing is also part of this process.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Programs were mostly entered using punched cards or paper tape.
Programming languages are essential for software development.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
Use of a static code analysis tool can help detect some possible problems.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
It is usually easier to code in "high-level" languages than in "low-level" ones.