In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 Programmable devices have existed for centuries.
Techniques like Code refactoring can enhance readability.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Different programming languages support different styles of programming (called programming paradigms).