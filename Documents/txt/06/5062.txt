
The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
It is usually easier to code in "high-level" languages than in "low-level" ones.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Techniques like Code refactoring can enhance readability.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 Programs were mostly entered using punched cards or paper tape.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.