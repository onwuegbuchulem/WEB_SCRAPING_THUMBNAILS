 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Techniques like Code refactoring can enhance readability.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Ideally, the programming language best suited for the task at hand will be selected.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
However, readability is more than just programming style.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Scripting and breakpointing is also part of this process.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
 Computer programmers are those who write computer software.
 Different programming languages support different styles of programming (called programming paradigms).
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.