 Programs were mostly entered using punched cards or paper tape.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Ideally, the programming language best suited for the task at hand will be selected.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.