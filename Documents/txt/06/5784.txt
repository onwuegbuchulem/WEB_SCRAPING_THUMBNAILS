The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
 Programs were mostly entered using punched cards or paper tape.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.

 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
There exist a lot of different approaches for each of those tasks.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.