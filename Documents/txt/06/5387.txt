 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Programming languages are essential for software development.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
Use of a static code analysis tool can help detect some possible problems.
Many applications use a mix of several languages in their construction and use.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
One approach popular for requirements analysis is Use Case analysis.
 Code-breaking algorithms have also existed for centuries.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.