One approach popular for requirements analysis is Use Case analysis.
Techniques like Code refactoring can enhance readability.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
However, readability is more than just programming style.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.