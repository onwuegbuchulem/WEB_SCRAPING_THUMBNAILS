Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
 Code-breaking algorithms have also existed for centuries.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Following a consistent programming style often helps readability.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.