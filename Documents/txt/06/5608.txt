Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
Many applications use a mix of several languages in their construction and use.
 It is very difficult to determine what are the most popular modern programming languages.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
Programming languages are essential for software development.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
However, readability is more than just programming style.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
 Different programming languages support different styles of programming (called programming paradigms).
Use of a static code analysis tool can help detect some possible problems.