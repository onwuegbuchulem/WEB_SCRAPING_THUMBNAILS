 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
It is usually easier to code in "high-level" languages than in "low-level" ones.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Many applications use a mix of several languages in their construction and use.
Techniques like Code refactoring can enhance readability.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Programming languages are essential for software development.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
 It is very difficult to determine what are the most popular modern programming languages.