Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.

However, readability is more than just programming style.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Different programming languages support different styles of programming (called programming paradigms).