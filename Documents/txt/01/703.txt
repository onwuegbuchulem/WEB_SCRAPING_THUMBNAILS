Many applications use a mix of several languages in their construction and use.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.

Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
 Following a consistent programming style often helps readability.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
Programming languages are essential for software development.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.