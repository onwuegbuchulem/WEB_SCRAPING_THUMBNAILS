 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 Programs were mostly entered using punched cards or paper tape.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.
 Programmable devices have existed for centuries.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
 Computer programmers are those who write computer software.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Techniques like Code refactoring can enhance readability.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Integrated development environments (IDEs) aim to integrate all such help.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.