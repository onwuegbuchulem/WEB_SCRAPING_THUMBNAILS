 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
It is usually easier to code in "high-level" languages than in "low-level" ones.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
 Different programming languages support different styles of programming (called programming paradigms).
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 Programs were mostly entered using punched cards or paper tape.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Use of a static code analysis tool can help detect some possible problems.
Their jobs usually involve:
 Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.
There are many approaches to the Software development process.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.