The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 Different programming languages support different styles of programming (called programming paradigms).
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
However, readability is more than just programming style.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
 Following a consistent programming style often helps readability.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Ideally, the programming language best suited for the task at hand will be selected.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.