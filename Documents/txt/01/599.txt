Scripting and breakpointing is also part of this process.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 Programs were mostly entered using punched cards or paper tape.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
There are many approaches to the Software development process.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Normally the first step in debugging is to attempt to reproduce the problem.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
Also, specific user environment and usage history can make it difficult to reproduce the problem.