 Different programming languages support different styles of programming (called programming paradigms).
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
However, readability is more than just programming style.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
Many applications use a mix of several languages in their construction and use.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Normally the first step in debugging is to attempt to reproduce the problem.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Programming languages are essential for software development.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.