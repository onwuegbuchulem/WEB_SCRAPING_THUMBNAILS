 Programs were mostly entered using punched cards or paper tape.
 It is very difficult to determine what are the most popular modern programming languages.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Following a consistent programming style often helps readability.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
There exist a lot of different approaches for each of those tasks.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
There are many approaches to the Software development process.
 Code-breaking algorithms have also existed for centuries.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Use of a static code analysis tool can help detect some possible problems.