Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 It is very difficult to determine what are the most popular modern programming languages.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
However, readability is more than just programming style.
One approach popular for requirements analysis is Use Case analysis.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Many applications use a mix of several languages in their construction and use.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.