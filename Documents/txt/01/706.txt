For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
 It is very difficult to determine what are the most popular modern programming languages.
There exist a lot of different approaches for each of those tasks.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Integrated development environments (IDEs) aim to integrate all such help.
Techniques like Code refactoring can enhance readability.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.

 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.