 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
However, readability is more than just programming style.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Techniques like Code refactoring can enhance readability.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 Different programming languages support different styles of programming (called programming paradigms).

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Many applications use a mix of several languages in their construction and use.