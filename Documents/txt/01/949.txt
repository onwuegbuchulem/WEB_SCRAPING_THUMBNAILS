Integrated development environments (IDEs) aim to integrate all such help.
One approach popular for requirements analysis is Use Case analysis.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.

As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
However, readability is more than just programming style.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Methods of measuring programming language popularity include: counting the number of job advertisements that mention the language, the number of books sold and courses teaching the language (this overestimates the importance of newer languages), and estimates of the number of existing lines of code written in the language (this underestimates the number of users of business languages such as COBOL).
It is usually easier to code in "high-level" languages than in "low-level" ones.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.