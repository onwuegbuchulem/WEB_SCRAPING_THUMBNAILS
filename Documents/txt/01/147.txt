 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Ideally, the programming language best suited for the task at hand will be selected.
 Following a consistent programming style often helps readability.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Techniques like Code refactoring can enhance readability.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
 Different programming languages support different styles of programming (called programming paradigms).
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.