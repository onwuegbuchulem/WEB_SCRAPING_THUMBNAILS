However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Many applications use a mix of several languages in their construction and use.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Integrated development environments (IDEs) aim to integrate all such help.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.