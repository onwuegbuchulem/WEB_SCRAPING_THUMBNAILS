In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
There exist a lot of different approaches for each of those tasks.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Computer programmers are those who write computer software.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
There are many approaches to the Software development process.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 Programs were mostly entered using punched cards or paper tape.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.