 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
 Code-breaking algorithms have also existed for centuries.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
Techniques like Code refactoring can enhance readability.
Use of a static code analysis tool can help detect some possible problems.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
One approach popular for requirements analysis is Use Case analysis.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
 Different programming languages support different styles of programming (called programming paradigms).
Ideally, the programming language best suited for the task at hand will be selected.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.