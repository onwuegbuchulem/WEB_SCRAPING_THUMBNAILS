In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 Programs were mostly entered using punched cards or paper tape.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Scripting and breakpointing is also part of this process.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.