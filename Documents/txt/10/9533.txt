 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Many applications use a mix of several languages in their construction and use.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 Programs were mostly entered using punched cards or paper tape.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
There are many approaches to the Software development process.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
Ideally, the programming language best suited for the task at hand will be selected.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.