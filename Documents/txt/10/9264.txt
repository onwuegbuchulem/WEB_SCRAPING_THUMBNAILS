 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Following a consistent programming style often helps readability.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
 Computer programmers are those who write computer software.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
One approach popular for requirements analysis is Use Case analysis.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
 New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).
Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
However, readability is more than just programming style.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.