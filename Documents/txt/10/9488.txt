 Different programming languages support different styles of programming (called programming paradigms).
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
There exist a lot of different approaches for each of those tasks.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
 It is very difficult to determine what are the most popular modern programming languages.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Programming languages are essential for software development.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
 Computer programmers are those who write computer software.
Integrated development environments (IDEs) aim to integrate all such help.