
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 Code-breaking algorithms have also existed for centuries.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 Different programming languages support different styles of programming (called programming paradigms).
Use of a static code analysis tool can help detect some possible problems.
 Following a consistent programming style often helps readability.
 It is very difficult to determine what are the most popular modern programming languages.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware.
Integrated development environments (IDEs) aim to integrate all such help.
For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
Unreadable code often leads to bugs, inefficiencies, and duplicated code.