Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
There are many approaches to the Software development process.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Many applications use a mix of several languages in their construction and use.
Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Normally the first step in debugging is to attempt to reproduce the problem.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.