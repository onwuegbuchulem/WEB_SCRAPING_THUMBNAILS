Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
There are many approaches to the Software development process.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Programming languages are essential for software development.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Use of a static code analysis tool can help detect some possible problems.