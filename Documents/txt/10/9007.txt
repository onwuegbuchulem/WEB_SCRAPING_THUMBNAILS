 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Normally the first step in debugging is to attempt to reproduce the problem.
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).


The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
There are many approaches to the Software development process.
Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute.
 Programmable devices have existed for centuries.
For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
It is usually easier to code in "high-level" languages than in "low-level" ones.
There exist a lot of different approaches for each of those tasks.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.