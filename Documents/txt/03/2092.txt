Scripting and breakpointing is also part of this process.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Ideally, the programming language best suited for the task at hand will be selected.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Use of a static code analysis tool can help detect some possible problems.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
 The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging).
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 Different programming languages support different styles of programming (called programming paradigms).
One approach popular for requirements analysis is Use Case analysis.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
Normally the first step in debugging is to attempt to reproduce the problem.