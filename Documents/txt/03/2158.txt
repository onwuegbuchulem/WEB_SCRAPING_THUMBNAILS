The following properties are among the most important:

 In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code.
There exist a lot of different approaches for each of those tasks.
One approach popular for requirements analysis is Use Case analysis.
Scripting and breakpointing is also part of this process.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics.

It affects the aspects of quality above, including portability, usability and most importantly maintainability.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
Ideally, the programming language best suited for the task at hand will be selected.
It is usually easier to code in "high-level" languages than in "low-level" ones.
Use of a static code analysis tool can help detect some possible problems.
 Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation.