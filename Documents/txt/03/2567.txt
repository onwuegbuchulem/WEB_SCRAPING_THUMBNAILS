Use of a static code analysis tool can help detect some possible problems.
In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 It is very difficult to determine what are the most popular modern programming languages.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
 Different programming languages support different styles of programming (called programming paradigms).
 Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA).
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Ideally, the programming language best suited for the task at hand will be selected.
Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages.