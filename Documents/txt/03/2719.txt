It affects the aspects of quality above, including portability, usability and most importantly maintainability.
 Allen Downey, in his book How To Think Like A Computer Scientist, writes:
 Many computer languages provide a mechanism to call functions provided by shared libraries.
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference.
However, readability is more than just programming style.
FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developedâ€”in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
There exist a lot of different approaches for each of those tasks.
There are many approaches to the Software development process.
Many applications use a mix of several languages in their construction and use.
Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses.
Scripting and breakpointing is also part of this process.

It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).