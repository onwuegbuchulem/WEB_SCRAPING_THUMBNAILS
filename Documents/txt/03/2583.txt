FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se.
Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability.
 Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.
Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
There are many approaches to the Software development process.