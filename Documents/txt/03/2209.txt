It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices.
However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.
 Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
 After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Techniques like Code refactoring can enhance readability.
For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software.
It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Also, specific user environment and usage history can make it difficult to reproduce the problem.
Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.