 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
 Programs were mostly entered using punched cards or paper tape.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.

 Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display.
Techniques like Code refactoring can enhance readability.
Integrated development environments (IDEs) aim to integrate all such help.
However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.
Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.

 Computer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks.
This can be a non-trivial task, for example as with parallel processes or some unusual software bugs.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
 Programmable devices have existed for centuries.