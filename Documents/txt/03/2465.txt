 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
 It is very difficult to determine what are the most popular modern programming languages.
 Readability is important because programmers spend the majority of their time reading, trying to understand, reusing and modifying existing source code, rather than writing new source code.
Techniques like Code refactoring can enhance readability.
 Programs were mostly entered using punched cards or paper tape.
Methods of measuring programming language popularity include: counting the number of job advertisements that mention the language, the number of books sold and courses teaching the language (this overestimates the importance of newer languages), and estimates of the number of existing lines of code written in the language (this underestimates the number of users of business languages such as COBOL).
 Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
 Programmable devices have existed for centuries.
He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.
Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.
It is usually easier to code in "high-level" languages than in "low-level" ones.
While these are sometimes considered programming, often the term software development is used for this larger overall process â€“ with the terms programming, implementation, and coding reserved for the writing and editing of code per se.