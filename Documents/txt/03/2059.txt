
The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.
Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
Techniques like Code refactoring can enhance readability.
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Programming languages are essential for software development.
 In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form.
They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
It is usually easier to code in "high-level" languages than in "low-level" ones.
In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" â€“ a series of pasteboard cards with holes punched in them.
Normally the first step in debugging is to attempt to reproduce the problem.
 Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code.
Scripting and breakpointing is also part of this process.
 The first computer program is generally dated to 1843, when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.