Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit.
Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.
 The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
 Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users.
Many applications use a mix of several languages in their construction and use.
It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages.
By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers.

It is usually easier to code in "high-level" languages than in "low-level" ones.
 Code-breaking algorithms have also existed for centuries.
Integrated development environments (IDEs) aim to integrate all such help.
 Whatever the approach to development may be, the final program must satisfy some fundamental properties.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.

The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'.