However, readability is more than just programming style.
However, Charles Babbage had already written his first program for the Analytical Engine in 1837.
Ideally, the programming language best suited for the task at hand will be selected.
 Following a consistent programming style often helps readability.
One approach popular for requirements analysis is Use Case analysis.
It is usually easier to code in "high-level" languages than in "low-level" ones.
Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.
Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.
Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers.
 A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Some of these factors include:
 The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Many applications use a mix of several languages in their construction and use.
The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists.